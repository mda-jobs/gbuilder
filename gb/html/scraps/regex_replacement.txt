[https://regex101.com/]

^([A-Za-z ]+:)([ ]+\t)(.+)
        <tr>\n\n          <td>$1</td>\n\n          <td>$3</td></tr>\n

<a href='#$1'><code>$1</code></a> | 

<a href='#$1~attribute'><tt>$1</tt></a> | 

<a href='#$1~element'><code>$1</code></a> | 

<a href='#$1_content'>$1</a> | 


<dt id='$1'>$1 <span class='unbold'></span><span id=''/><span class='unbold float-rt'></span></dt>\n<dd>\n  <p>\n\n  </p>\n\n  <hr/>\n\n  <footer>\n    <p class='source'>\n      <a href=''></a>&mdash;\n    </p>\n    <p class='cf'>\n      <a href='#'></a>\n    </p>\n    <p class='see'>\n      <a href='#'></a>\n    </p>\n    <p class='see-also'>\n      <a href='#'></a>\n    </p>\n    <p class='reference'>\n      <a href='#'></a>\n    </p>\n    <div class='reference'>\n      <ul>\n        <li><a href=''></a>&mdash;</li>\n        <li><a href=''></a>&mdash;</li>\n        <li><a href=''></a>&mdash;</li>\n      </ul>\n    </div>\n  </footer>\n</dd>\n\n
$1 {\n\n    properties: "",\n\n    property: {\n\n    }\n\n    methods: "",\n\n    method: {\n\n    }\n

"$1": {\n\n    identity: "",\n\n    context: "",\n\n    symantics: "",\n\n    note: "",\n\n    syntax: [\n\n        ["", ""],\n\n        ["", ""]\n\n    ],\n\n    example: {\n\n        html:\n\n        javascript:\n    }\n\n    specification: {\n\n        WHATWG: ""\n    },\n\n    cf: "",\n\n    "see also": "",\n\n    reference: [\n\n        ["MDN", "", ""],\n\n        ["", ""],\n\n        ["", "", ""],\n\n        ["", "", ""]\n    ]\n},\n\n

Selectors
---------
([*\" -~=\[\]\w]+)(\t)([*\" -~=\[\]\w]+)(\t)([*\" -~=\[\]\w]+)(\t)(\d)

Property Table
--------------
^([^\:]+)([:\s]+)(.+)(\s+)
([^\t]+)(\t)(.+)(\n)
^([^\:]+)(:)(\s+)(.+)(\n)

        <tr>\n\n          <td>$1</td>\n\n          <td>$3</td></tr>\n\n


Property Values
---------------
([^\s]+)( \| )

<a href='#$1~value'><tt>$1</tt></a>$2

Attributes and Elements
-----------------------
(\w+) attribute 
<a href='#$1~attribute'><tt>$1</tt></a> | 

(\w+) element 
<a href='#$1~element'><code>$1</code></a> | 

reverse match any string not containing "interface" (HowTo Negate regex, inverse regex)
^((?!interface).)*$

Select empty lines
------------------
(^[\r\n]*|[\r\n]+)[\s\t]*[\r\n]+

index filter:
([\w\s]+)( [ \d{1,2},|.]*)$

attributes, constants
---------------------
(short|unsigned short|unsigned long)(\s*)([^\s]+)(\s+)(.+)
(\w+ \w+|\w+::\w+|\w+)(\s*)(.+)